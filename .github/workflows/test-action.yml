name: CI/CD GitHub Actions
on: [push]
jobs:
  gtest-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git submodule init
      - run: git submodule update
      - run: pip install --user cpp-coveralls
      - run: sudo apt-get update -y && sudo apt-get install -y qt5-qmake qtbase5-dev qtchooser qtbase5-dev-tools
      - run: qmake
      - run: make
      - run: ./tests/tests

      - name: Coveralls
        run: coveralls -t ${{ secrets.COVERALLS_REPO_TOKEN }} --root . -E ".*external.*" -E ".*tests.*"


  sonarcloud-check:
    needs: gtest-tests
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.6.1.2450 # Find the latest version in the "Linux" link on this page:
                                        # https://sonarcloud.io/documentation/analysis/scan/sonarscanner/
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - run: git submodule init
      - run: git submodule update
      - run: sudo apt-get update -y && sudo apt-get install -y qt5-qmake qtbase5-dev qtchooser qtbase5-dev-tools
      - run: qmake
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: Run build-wrapper
        run: |
          chmod +x $HOME/.sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64
          export PATH=$HOME/.sonar/build-wrapper-linux-x86:$PATH
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make clean all
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Put the name of your token here
        run: |
          sonar-scanner \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.organization="nikitagordeev10" \
            -Dsonar.projectKey="nikitagordeev10_petrsu-unit-testing-002-text-editor" \
            -Dsonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            -Dsonar.coverageReportPaths=coverage.xml